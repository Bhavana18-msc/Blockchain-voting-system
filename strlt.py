# -*- coding: utf-8 -*-
"""strlt.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eF-8Xt9_y5sndfWXIJUbxMmZk__iIbbJ
"""

import streamlit as st
from corevote import register_voter, generate_tokens, cast_vote, audit_blockchain, blockchain, voter_db

# Streamlit Page Configuration
st.set_page_config(
    page_title="Blockchain Voting System",
    page_icon="🗳️",
    layout="wide",
)

# Streamlit User Interface
st.title("Blockchain Voting System")
st.subheader("Ensuring Transparent, Secure, and Efficient Elections")

# Voter Registration
st.markdown("### 📝 Voter Registration")
with st.form("voter_registration_form"):
    voter_name = st.text_input("Enter Your Full Name")
    voter_id = st.text_input("Enter Your Voter ID")
    submit_registration = st.form_submit_button("Register Voter")
    if submit_registration:
        success, message = register_voter(voter_name, voter_id)
        if success:
            st.success(message)
        else:
            st.error(message)

# Token Generation
st.markdown("### 🔑 Generate Voting Tokens")
if st.button("Generate Tokens"):
    tokens = generate_tokens()
    if tokens:
        st.success("Voting tokens generated successfully!")
        st.json(tokens)
    else:
        st.warning("No voters registered yet!")

# Cast Vote
st.markdown("### 🗳️ Cast Your Vote")
with st.form("voting_form"):
    voter_id = st.text_input("Enter Your Voter ID")
    token = st.text_input("Enter Your Voting Token")
    candidate = st.text_input("Enter Candidate's Name")
    submit_vote = st.form_submit_button("Submit Vote")
    if submit_vote:
        success, message = cast_vote(voter_id, token, candidate)
        if success:
            st.success(message)
        else:
            st.error(message)

# Monitor and Audit Blockchain
st.markdown("### 📊 Election Monitoring & Auditing")
with st.expander("View Blockchain"):
    st.json(blockchain)

with st.expander("Audit Blockchain"):
    is_valid = audit_blockchain()
    if is_valid:
        st.success("Blockchain is valid and secure.")
    else:
        st.error("Blockchain integrity compromised!")

"""File "/home/adminuser/venv/lib/python3.12/site-packages/streamlit/runtime/scriptrunner/exec_code.py", line 88, in exec_func_with_error_handling
    result = func()
             ^^^^^^
File "/home/adminuser/venv/lib/python3.12/site-packages/streamlit/runtime/scriptrunner/script_runner.py", line 579, in code_to_exec
    exec(code, module.__dict__)
File "/mount/src/blockchain-voting-system/strlt.py", line 11, in <module>
    from blockchain_logic import register_voter, generate_tokens, cast_vote, audit_blockchain, blockchain, voter_db
"""